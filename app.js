let express = require("express");
const dotenv = require("dotenv");
const cors = require("cors");
const bodyParser = require("body-parser");
const Razorpay = require("razorpay")
const crypto = require("crypto");
const path = require('path') 
dotenv.config();
let app = express();
const instance = new Razorpay ({//this instance used in instantiating order for razorpay 
    key_id:process.env.KEY_ID,
    key_secret:process.env.KEY_SECRET
})
//Middlewares
app.use(cors());
app.use(express.json());
app.use(
  bodyParser.urlencoded({
    extended: false,    
  })
);
app.use(bodyParser.json());
app.set('views', path.join(__dirname, 'views'))
app.set("view engine", "ejs");//setting view engine to ejs, so that we dont need to everytime specify the extension whenver we r refring to a template using the GET route

//Routes
app.get("/", (req, res) => {
  res.render("wrapper");  //
});
app.get("/Razorpayments", (req, res) => {
    res.render("payment", { key: process.env.KEY_ID });//we render here payment.ejs file , we dont need to specify the extension , and passing key from backend to the front end so that we dont have to actually write the key in the code 
  });
  app.post("/api/payment/order", (req, res) => {//to create the order , instantiate the order and recive the order id from razorpay server 
    params = req.body;//captuing the things we passed from front end , amount currency reciept etc
    instance.orders//creates an order on razorpay server
      .create(params)//promise 
      .then((data) => {
        res.send({ sub: data, status: "success" });//sends data(order id) and a status      
      })
      .catch((error) => {
        res.send({ sub: error, status: "failed" });
      });
  });
  
  app.post("/api/payment/verify", (req, res) => {//will verify the signature and will send a response weather if sigs were succesfuly verified or not 
    body = req.body.razorpay_order_id + "|" + req.body.razorpay_payment_id;
  
    var expectedSignature = crypto
      .createHmac("sha256", process.env.KEY_SECRET)//signature generated by KEY_SECRET
      .update(body.toString())
      .digest("hex");
    console.log("sig" + req.body.razorpay_signature);//signature passed from front end 
    console.log("sig" + expectedSignature);
    var response = { status: "failure" };
    if (expectedSignature === req.body.razorpay_signature)
      response = { status: "success" };
    res.send(response);
  });
 
  //STRIPE
  


var Publishable_Key = 'pk_test_51Ig7NWSFN78cA4x1nCeIU9HLLIBGth1p3Bnk7Lq2ngxJIPUFsX1jSPPmodeyCSL00VDDEVdwsdcDCrFGlbEkBrkp00YQFJpQeS'
var Secret_Key = 'sk_test_51Ig7NWSFN78cA4x1dAhsPy9lI5UGAktcI1e6BxCitpbixg0CBSzV0GaCdbnkLoeFdFsEqVSomjWnEILDF1NGeDHv00KPZ4bpgy'

const stripe = require('stripe')(Secret_Key) 



app.get('/Stripe', function(req, res){ 
    res.render('Home', { 
    key: Publishable_Key 
    }) 
}) 

app.post('/payment', function(req, res){ 
    console.log(req.body);
    // Moreover you can take more details from user 
    // like Address, Name, etc from form 
    stripe.customers.create({ 
        
        email: req.body.stripeEmail, 
        source: req.body.stripeToken, 
        name: 'Siddhant Grover', 
        address: { 
            line1: 'TC 9/4 Old MES colony', 
            postal_code: '110092', 
            city: 'New Delhi', 
            state: 'Delhi', 
            country: 'India', 
        } 
    }) 
    .then((customer) => { 

        return stripe.charges.create({ 
            amount: 7000,    // Charing Rs 25 
            description: 'Web Development Product', 
            currency: 'INR', 
            customer: customer.id 
        }); 
    }) 
    .then((charge) => { 
        res.send("Success") // If no error occurs 
    }) 
    .catch((err) => { 
        res.send(err)    // If some error occurs 
    }); 
}) 

app.listen("3000", () => {
  console.log("server started");
});